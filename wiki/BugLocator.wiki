#summary A tool for bug locating.

= Description=

For a large and evolving software system, the project team could receive a large number of bug reports. Locating the source code files that need to be changed in order to fix the bugs is a challenging task. Once a bug report is received, it is desirable to automatically point out to the files that developers should change in order to fix the bug. In this paper, we propose !BugLocator, an information retrieval based method for locating the relevant files for fixing a bug. !BugLocator ranks all files based on the textual similarity between the initial bug report and the source code using a new similarity measure, taking into consideration information about similar bugs that have been fixed before. We perform large-scale experiments on four open source projects to localize more than 3,000 bugs. The results show that !BugLocator can effectively locate the file where the bug should be fixed. For example, relevant buggy files for 62.60% Eclipse 3.1 bugs are ranked in the top ten among 12,863 files. Our experiments also show that !BugLocator outperforms existing state-of-the-art bug localization methods.


= Download and Installation =

!BugLocator is free for scientific use only. More information about !BugLocator can be found at the following paper: 
  _Jian Zhou, Hongyu Zhang, and David Lo, Where Should the Bugs be Fixed? More    Accurate Information Retrieval-Based Bug Localization based on Bugs Reports, In  Proc. ICSE 2012, Zurich, Switzerland, June 2012_
This program was developed with Java and the source code is available from [http://code.google.com/p/bugcenter/downloads/list Download page].

After unpackting the file, you can find these: 
  * !BugLocator.jar
  * !ReadMe.txt
  * Data Folder(xml examples)
= How to use=
java -jar !BugLocator [-options] 

where options must include:

-b	indicates the bug information file,the bug information file must be .xml file in the data folder.

-s	indicates the source code directory.

-a	indicates the alpha factor for combining vsmScore and simiScore

-o	indicates the result file,the format of result file is "bug id, relevant source code file,rank(start with 0),score".

For example the command may be "java -jar !BugLocator -b E:\Data&Tool\data\SWTBugRepository.xml -s E:\Data&Tool\swt-3.1\src -a 0.2 -o E:\Data&Tool\output.txt" for SWT system