#summary A tool for recovering missing links between bugs and changes.

= Introduction =

This page describes the software we developed for our research work on recovering missing links between bugs and changes, combining Information Retrieval technology and other useful features. The research work will be helpful to the researches which are based on the linkage data, such as defect prediction.


= Download and Installation =

!ReLinkis free for scientific use only. More information about !ReLinkcan be found at the following paper:

  _Rongxin Wu, Hongyu Zhang, Sunghum Kim, S.C. Cheung, Recovering Links between Bugs and Changes, ESEC/FSE 2011_

The software is developed in Java and the source code is available from [http://code.google.com/p/bugcenter/downloads/list Download page]. 

The software contains one jar file named "!ReLink.jar", a wordnet configuration file named "file_properties.xml" and wordnet dictionary named "dictionary".

= How to use =

The software takes bug data file, bug comment file and change log file as the input and produce the links in the specific directory. The followings are the input description.

  * Name of bug data file. Bug data file provides the basic bug information. The format of the bug data file is: bugID	Type	Status	 Owner	Reporter	!ReportDate	!ModifiedDate !LastDate	Summary	Comments

  * Name of bug comment file. Bug comment file provides the comments from the developers and the users. The format of the bug comment file is: bugID	 developer date	comments

  * Name of change log file. Change log file provides the basic change log information. The format of the change log file is: revisionNO	 date	Author	 Message

  * Name of diretory for the result. The result directory is used to store the final results for links.

  * Name of golden set file (Optional Input). The golden set file is used to evaluate the final results. If you don't specify the golden set file, we won't give any evaluation on the results.

  * Name of index file (Optional Input). The index file is the file which store the index of bug reports and change logs, which is generated by your previous experiment. Since the process of indexing will be cost too much time, it's better to use the privous indexing file.

For details about the approach, please refer to our paper.

Java 1.5 is required to run the software. To run the software, issue the following command:

{{{ 
$ java -jar ReLink.jar bugDataFile bugCommentDataFile changeLogFile dataStorageDirectory (-g goldenSetFile) 
(-i indexFile) 
}}}

The output file is final_results.txt. The format of the output file is: 

{{{
bugID	reporter	owner status	 reportDate	modifiedDate	 Type	bugSummary	
recommendRevisionNO recommendRevisionAuthor	recommendRevisionLog	isTrueLink
}}}